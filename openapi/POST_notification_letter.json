{
    "post": {
        "description": "You can use this endpoint to send letter.",
        "operationId": "sendLetter",
        "requestBody": {
            "content": {
                "application/json": {
                    "schema": {
                        "$ref": "./schema.json#/components/schemas/SendLetterRequest"
                    },
                    "examples": {
                        "Letter": {
                            "value": {
                                "template_id": "64415853-cb86-4cc4-b597-2aaa94ef8c39",
                                "personalisation": {
                                    "address_line_1": "Amala Bird",
                                    "address_line_2": "123 High Street",
                                    "address_line_3": "Richmond upon Thames",
                                    "address_line_4": "Middlesex",
                                    "address_line_5": "SW14 6BF",
                                    "name": "Amala",
                                    "appointment_date": "1 January 2018 at 1:00PM",
                                    "required_documents": [
                                        "passport",
                                        "utility bill",
                                        "other id"
                                    ]
                                },
                                "reference": "your reference"
                            }
                        },
                        "Precompiled Letter": {
                            "value": {
                                "reference": "your reference",
                                "content": "file as base64 encoded string",
                                "postage": "second"
                            }
                        }
                    }
                }
            },
            "description": "requestPayload",
            "required": true
        },
        "responses": {
            "201": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "schema.json#/components/schemas/SendLetterResponse"
                        },
                        "examples": {
                            "Letter": {
                                "value": {
                                    "id": "3d1ce039-5476-414c-99b2-fac1e6add62c",
                                    "reference": "your reference",
                                    "content": {
                                        "subject": "Your upcoming pigeon registration appointment",
                                        "body": "Dear Amala\r\n\r\nYour pigeon registration appointment is scheduled for 1 January 2018 at 1:00PM.\r\n\r\nPlease bring:\r\n\n\n* passport\n* utility bill\n* other id\r\n\r\nYours,\r\nPigeon Affairs Bureau"
                                    },
                                    "uri": "https://api.notifications.service.gov.uk/v2/notifications/3d1ce039-5476-414c-99b2-fac1e6add62c",
                                    "template": {
                                        "id": "64415853-cb86-4cc4-b597-2aaa94ef8c39",
                                        "version": 3,
                                        "uri": "https://api.notifications.service.gov.uk/v2/template/64415853-cb86-4cc4-b597-2aaa94ef8c39"
                                    },
                                    "scheduled_for": null
                                }
                            },
                            "Precompiled Letter": {
                                "value": {
                                    "id": "1d986ba7-fba6-49fb-84e5-75038a1dd968",
                                    "reference": "your reference",
                                    "postage": "second"
                                }
                            }
                        }
                    }
                },
                "description": "Created"
            },
            "400": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "schema.json#/components/schemas/SendNotificaitonRequestError"
                        },
                        "examples": {
                            "Personalisation required property": {
                                "value": {
                                    "errors": [{
                                        "error": "ValidationError",
                                        "message": "personalisation address_line_1 is a required property"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Must be a real UK postcode": {
                                "value": {
                                    "errors": [{
                                        "error": "ValidationError",
                                        "message": "Must be a real UK postcode"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Must be a real address": {
                                "value": {
                                    "errors": [{
                                        "error": "ValidationError",
                                        "message": "Must be a real address"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Last line of address must be a postcode or country": {
                                "value": {
                                    "errors": [{
                                        "error": "ValidationError",
                                        "message": "Last line of address must be a real UK postcode or another country"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Last line of a BFPO address must not be a country": {
                                "value": {
                                    "errors": [{
                                        "error": "ValidationError",
                                        "message": "The last line of a BFPO address must not be a country"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Address must be at least 3 lines": {
                                "value": {
                                    "errors": [{
                                        "error": "ValidationError",
                                        "message": "Address must be at least 3 lines"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Address must be no more than 7 lines": {
                                "value": {
                                    "errors": [{
                                        "error": "ValidationError",
                                        "message": "Address must be no more than 7 lines"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Address lines most not start with special characters": {
                                "value": {
                                    "errors": [{
                                        "error": "ValidationError",
                                        "message": "Address lines must not start with any of the following characters: @ ( ) = [ ] \" \\ / , < >"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Postage invalid": {
                                "value": {
                                    "errors": [{
                                        "error": "ValidationError",
                                        "message": "postage invalid. It must be either first, second or economy"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Cannot send letters when service is in trial mode": {
                                "value": {
                                    "errors": [{
                                        "error": "BadRequestError",
                                        "message": "Cannot send letters when service is in trial mode - see https://www.notifications.service.gov.uk/trial-mode"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Service is not allowed to send letters": {
                                "value": {
                                    "errors": [{
                                        "error": "BadRequestError",
                                        "message": "Service is not allowed to send letters"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Letter contact id does not exist": {
                                "value": {
                                    "errors": [{
                                        "error": "BadRequestError",
                                        "message": "letter_contact_id <letter_contact_id> does not exist in database for service id <service id>"
                                    }],
                                    "status_code": 400
                                }
                            },
                            "Letter content is not a valid PDF": {
                                "value": {
                                    "errors": [{
                                        "error": "BadRequestError",
                                        "message": "Letter content is not a valid PDF"
                                    }],
                                    "status_code": 400
                                }
                            }
                        }
                    }
                },
                "description": "Bad request. Check the `message` in the response to find out why your request failed. In addition to the endpoint specific errors shown in the examples, you may also encounter various schema validation errors, for example when you forget to pass in an argument, or pass in an argument of a wrong type. You can find a list of these errors at https://docs.notifications.service.gov.uk/rest-api.html#general-errors."
            },
            "403": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "schema.json#/components/schemas/AuthError"
                        },
                        "examples": {
                            "Cannot send letters with a team api key": {
                                "value": {
                                    "errors": [{
                                        "error": "BadRequestError",
                                        "message": "Cannot send letters with a team api key"
                                    }],
                                    "status_code": 403
                                }
                            }
                        }
                    }
                },
                "description": "Auth error. Check the `message` in the response to find out why your request failed. For more examples please see https://docs.notifications.service.gov.uk/rest-api.html#general-errors."
            },
            "429": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "schema.json#/components/schemas/LimitError"
                        }
                    }
                },
                "description": "Rate or service limit error. Check the `message` in the response to find out why your request failed. For more examples please see https://docs.notifications.service.gov.uk/rest-api.html#general-errors."
            }
        },
        "callbacks": {
            "returnedLetter": {
                "{$callback_url}": {
                    "post": {
                        "requestBody": {
                            "description": "When a letter you sent is returned, Notify will send details of the returned letter to your callback URL.\n\nFind more [information about returned letters](https://www.notifications.service.gov.uk/using-notify/delivery-times#returned-mail). It can take a few weeks to receive information about a returned letter.\n\nThe callback message is formatted in JSON. The key, description and format of the callback message arguments will be:",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "schema.json#/components/schemas/LetterCallbackRequest"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "2XX": {
                                "description": "Success"
                            },
                            "4XX": {
                                "description": "Failed"
                            },
                            "5XX": {
                                "description": "Failed"
                            }
                        },
                        "security": [
                            {
                                "BearerAuth": []
                            }
                        ],
                        "summary": "Returned letter callback"
                    }
                }
            }
        },
        "security": [
            {
                "BearerAuth": []
            }
        ],
        "summary": "Send a letter",
        "tags": [
            "Send a message"
        ]
    }
}