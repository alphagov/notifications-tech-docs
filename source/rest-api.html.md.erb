---
title: REST API documentation
parent: https://www.notifications.service.gov.uk/documentation
---
# REST API documentation

This documentation is for developers interested in using the GOV.UK Notify API to send emails, text messages or letters.

You can use it to integrate directly with the API if you cannot use one of our 6 client libraries.

Developers can also use [our OpenAPI file](https://github.com/alphagov/notifications-tech-docs/blob/main/openapi/publicapi_spec.json) with tools such as [Swagger](https://swagger.io/) and [Redoc](https://github.com/Redocly/redoc) to assist with using the REST API.  You cannot use Swagger Editor to make test API requests.

## Making a request

### Base URL
```
https://api.notifications.service.gov.uk
```

### Headers

#### Authorisation header

The authorisation header is an [API key](#api-keys) that is encoded using [JSON Web Tokens](https://jwt.io/). You must include an authorisation header.

JSON Web Tokens have a standard header and a payload. The header consists of:

```javascript
{
  "typ": "JWT",
  "alg": "HS256"
}
```

The payload consists of:

```javascript
{
  "iss": "26785a09-ab16-4eb0-8407-a37497a57506",
  "iat": 1568818578
}
```

JSON Web Tokens are encoded using a secret key with the following format:

```
3d844edf-8d35-48ac-975b-e847b4f122b0
```

That secret key forms a part of your [API key](#api-keys), which follows the format `{key_name}-{iss-uuid}-{secret-key-uuid}`.

For example, if your API key is
`my_test_key-26785a09-ab16-4eb0-8407-a37497a57506-3d844edf-8d35-48ac-975b-e847b4f122b0`:

* your API key name is `my_test_key`
* your iss (your service id) is `26785a09-ab16-4eb0-8407-a37497a57506`
* your secret key is `3d844edf-8d35-48ac-975b-e847b4f122b0`

`iat` (issued at) is the current time in UTC in epoch seconds. The token expires within 30 seconds of the current time.

Refer to the [JSON Web Tokens website](https://jwt.io/) for more information on encoding your authorisation header.

When you have an encoded and signed token, add that token to a header as follows:

```javascript
"Authorization": "Bearer encoded_jwt_token"
```

#### Content header

The content header is `application/json`:

```javascript
"Content-type": "application/json"
```

## Send a message

You can use GOV.UK Notify to send emails, text messages and letters.

### Send a text message

#### Method

```
POST /v2/notifications/sms
```

#### Request body

```javascript
{
  "phone_number": "+447900900123",
  "template_id": "f33517ff-2a88-4f6e-b855-c550268ce08a"
}
 ```

#### Arguments

##### phone_number (required)

The phone number of the recipient of the text message. This can be a UK or international number.

For example:

```javascript
"phone_number": "+447900900123"
```

##### template_id (required)

To find the template ID:

1. [Sign in to GOV.UK Notify](https://www.notifications.service.gov.uk/sign-in).
1. Go to the __Templates__ page and select the relevant template.
1. Select __Copy template ID to clipboard__.

For example:

```javascript
"template_id": "f33517ff-2a88-4f6e-b855-c550268ce08a"
```

##### personalisation (optional)

If a template has placeholder fields for personalised information such as name or reference number, you must provide their values in a dictionary with key value pairs. For example:

```javascript
"personalisation": {
  "first_name": "Amala",
  "appointment_date": "1 January 2018 at 1:00PM",
}
```

You can leave out this argument if a template does not have any placeholder fields for personalised information.

##### reference (optional)

An identifier you can create if necessary. This reference identifies a single unique message or a batch of messages. It must not contain any personal information such as name or postal address. For example:

```javascript
// optional string - identifies notification(s)
"reference": "your reference"
```

You can leave out this argument if you do not have a reference.

##### sms_sender_id (optional)

A unique identifier of the sender of the text message notification.

To find the text message sender:

1. [Sign in to GOV.UK Notify](https://www.notifications.service.gov.uk/sign-in).
1. Go to the __Settings__ page.
1. In the __Text Messages__ section, select __Manage__ on the __Text Message sender__ row.

You can then either:

- copy the sender ID that you want to use and paste it into the method
- select __Change__ to change the default sender that the service will use, and select __Save__

```javascript
"sms_sender_id": "8e222534-7f05-4972-86e3-17c5d9f894e2"
```

You can leave out this argument if your service only has one text message sender, or if you want to use the default sender.

#### Response

If the request is successful, the response body is `json` with a status code of `201`:

```javascript
{
  "id": "740e5834-3a29-46b4-9a6f-16142fde533a",  // required string - notification ID
  "reference": "your reference", // optional string - reference you provided when sending the message
  "content": {
    "body": "Hi Amala, your appointment is on 1 January 2018 at 1:00PM",  // required string - message content
    "from_number": "GOVUK"  // required string - sender name / phone number
  },
  "uri": "https://api.notifications.service.gov.uk/v2/notifications/740e5834-3a29-46b4-9a6f-16142fde533a",  // required string
  "template": {
    "id": "f33517ff-2a88-4f6e-b855-c550268ce08a", // required string - template ID
    "version": 3,  // required integer
    "uri": "https://api.notifications.service.gov.uk/v2/template/f33517ff-2a88-4f6e-b855-c550268ce08a"  // required string
  }
}
```

If you are using the [test API key](#test), all your messages will come back with a `delivered` status.

All messages sent using the [team and guest list](#team-and-guest-list) or [live](#live) keys will appear on your dashboard.

#### Error codes

If the request is not successful, the API returns `json` containing the relevant error code. To learn more about error structure, go to [Errors section](#errors).

|Error message|How to fix|
|:---|:---|
<%= partial 'documentation/error_tables/send_a_text_message' %>

### Send an email

#### Method

```
POST /v2/notifications/email
```

#### Request body
```javascript
{
  "email_address": "amala@example.com",
  "template_id": "9d751e0e-f929-4891-82a1-a3e1c3c18ee3"
}
```

#### Arguments

##### email_address (required)

The email address of the recipient.

For example:

```javascript
"email_address": "amala@example.com" // required string
```

##### template_id (required)

To find the template ID:

1. [Sign in to GOV.UK Notify](https://www.notifications.service.gov.uk/sign-in).
1. Go to the __Templates__ page and select the relevant template.
1. Select __Copy template ID to clipboard__.

For example:

```javascript
"template_id": "9d751e0e-f929-4891-82a1-a3e1c3c18ee3", // required UUID string
```

##### personalisation (optional)

If a template has placeholder fields for personalised information such as name or reference number, you need to provide their values in a dictionary with key value pairs. For example:

```javascript
"personalisation": {
  "first_name": "Amala",
  "appointment_date": "1 January 2018 at 1:00PM",
  // pass in a list and it will appear as bullet points in the message:
  "required_documents": ["passport", "utility bill", "other id"],
}
```
You can leave out this argument if a template does not have any placeholder fields for personalised information.

Find out how to [reduce the risk of malicious content injection in placeholders](#reducing-the-risk-of-malicious-content-injection-in-placeholders).

##### reference (optional)

An identifier you can create if necessary. This reference identifies a single unique email or a batch of emails. It must not contain any personal information such as name or postal address. For example:

```javascript
"reference": "your reference"
```
You can leave out this argument if you do not have a reference.

##### one_click_unsubscribe_url (recommended)

If you send subscription emails you must let recipients opt out of receiving them. Read our Using Notify page for more information about [unsubscribe links](https://www.notifications.service.gov.uk/using-notify/unsubscribe-links).

The one-click unsubscribe URL will be added to the headers of your email. Email s will use it to add an unsubscribe button.

```javascript
"one_click_unsubscribe_url": "https://example.com/unsubscribe.html?opaque=123456789" // optional string, a URL
```
The one-click unsubscribe URL must respond to an empty `POST` request by unsubscribing the user from your emails. You can include query parameters to help you identify the user.

Your unsubscribe URL and response must comply with the guidance specified in [Section 3.1 of IETF RFC 8058](https://www.rfcreader.com/#rfc8058_line139).

You can leave out this argument if the email being sent is not a subscription email.

You must also add an unsubscribe link to the bottom of your email. The unsubscribe link at the bottom of your email should take the email recipient to a webpage where they can confirm that they want to unsubscribe.

Find out how to add a link when you create a __New template__ or __Edit__ an email template.

##### email_reply_to_id (optional)

This is an email address specified by you to receive replies from your users. You must add at least one reply-to email address before your service can go live.

To add a reply-to email address:

1. [Sign in to GOV.UK Notify](https://www.notifications.service.gov.uk/sign-in).
1. Go to the __Settings__ page.
1. In the __Email__ section, select __Manage__ on the __Reply-to email addresses__ row.
1. Select __Add reply-to address__.
1. Enter the email address you want to use, and select __Add__.

For example:

```javascript
"email_reply_to_id": "8e222534-7f05-4972-86e3-17c5d9f894e2" // optional UUID string
```

You can leave out this argument if your service only has one reply-to email address, or you want to use the default email address.

#### Response

If the request is successful, the response body is `json` with a status code of `201`:

```javascript
{
  "id": "201b576e-c09b-467b-9dfa-9c3b689ee730",  // required string - notification ID
  "reference": "your reference",  // optional string - reference you provided when sending the message
  "content": {
    "subject": "Your upcoming pigeon registration appointment",  // required string - message subject
    "body": "Dear Amala\r\n\r\nYour pigeon registration appointment is scheduled for 1 January 2018 at 1:00PM.\r\n\r\nPlease bring:\r\n\n\n* passport\n* utility bill\n* other id\r\n\r\nYours,\r\nPigeon Affairs Bureau",  // required string - message content
    "from_email": "pigeon.affairs.bureau@notifications.service.gov.uk",  // required string - "FROM" email address, not a real inbox
    "one_click_unsubscribe_url": "https://example.com/unsubscribe.html?opaque=123456789",  // optional string
  },
  "uri": "https://api.notifications.service.gov.uk/v2/notifications/201b576e-c09b-467b-9dfa-9c3b689ee730",  // required string
  "template": {
    "id": "9d751e0e-f929-4891-82a1-a3e1c3c18ee3",  // required string - template ID
    "version": 1,  // required integer
    "uri": "https://api.notifications.service.gov.uk/v2/template/9d751e0e-f929-4891-82a1-a3e1c3c18ee3"  // required string
  }
}
```

#### Reducing the risk of malicious content injection in placeholders

Notify lets you [personalise messages](https://www.notifications.service.gov.uk/using-notify/personalisation) using placeholders.

You can [format](https://www.notifications.service.gov.uk/using-notify/formatting) content or add links and urls into placeholders using Markdown.

If you pass in information from untrusted sources (such as online forms) into your Notify template using personalisation, this may be used to add malicious content and links to notifications you send via Notify.

The malicious content could be:

  * Markdown syntax intended to be rendered into HTML
  * a plain text URL which would be rendered into a clickable phishing link

An example of how malicious content can be injected into Notify personalisation:

**Template in Notify**:

```javascript
Hello ((name))
```

**Personalisation**:

```javascript
{name: "Anne Example, now [click this evil link](https://malicious.link)"}
```

**Email will appear as**:

<pre>
 <small>Dear Anne Example, now <a href="https://malicious.link>click this evil link">click this evil link</a></small>
</pre>


We recommend you sanitise all input from untrusted sources to prevent the injection of malicious content.
You can use a backslash to escape [individual characters](https://www.markdownguide.org/basic-syntax/#characters-you-can-escape).
The characters of most concern are those that could be used to add a URL link such as `[`, `]`, `(` or `)`.


#### Error codes

If the request is not successful, the API returns `json` containing the relevant error code.
To learn more about error structure, go to [Errors section](#errors).

|Error message|How to fix|
|:---|:---|
<%= partial 'documentation/error_tables/send_an_email' %>


### Send a file by email

To send a file by email, add a placeholder to the template then upload a file. The placeholder will contain a secure link to download the file.

The links are unique and unguessable. GOV.UK Notify cannot access or decrypt your file.

Your file will be available to download for a default period of 26 weeks (6 months).

To help protect your files you can also:

* ask recipients to confirm their email address before downloading
* choose the length of time that a file is available to download

#### Add contact details to the file download page

1. [Sign in to GOV.UK Notify](https://www.notifications.service.gov.uk/sign-in).
1. Go to the __Settings__ page.
1. In the __Email__ section, select __Manage__ on the __Send files by email__ row.
1. Enter the contact details you want to use, and select __Save__.

#### Add a placeholder to the template

1. [Sign in to GOV.UK Notify](https://www.notifications.service.gov.uk/sign-in).
1. Go to the __Templates__ page and select the relevant email template.
1. Select __Edit__.
1. Add a placeholder to the email template using double brackets. For example: "Download your file at: ((link_to_file))"

Your email should also tell recipients how long the file will be available to download.

#### Upload your file

You can upload the following file types:

- CSV (.csv)
- image (.jpeg, .jpg, .png)
- Microsoft Excel Spreadsheet (.xlsx)
- Microsoft Word Document (.doc, .docx)
- PDF (.pdf)
- text (.json, .odt, .rtf, .txt)


Your file must be smaller than 2MB. [Contact the GOV.UK Notify team](https://www.notifications.service.gov.uk/support) if you need to send other file types.

You’ll need to convert the file into a string that is base64 encoded.

Pass the encoded string into an object with a `file` key, and put that in the personalisation argument. For example:

```javascript
"personalisation":{
  "first_name": "Amala",
  "appointment_date": "1 January 2018 at 1:00PM",
  "link_to_file": {"file": "file as base64 encoded string"}
}
```

#### Set the filename

You should provide a filename when you upload your file.

The filename should tell the recipient what the file contains. A memorable filename can help the recipient to find the file again later.

The filename must end with a file extension. For example, `.csv` for a CSV file. If you include the wrong file extension, recipients may not be able to open your file.

If you do not provide a filename for your file, Notify will:

* generate a random filename
* try to add the correct file extension

If Notify cannot add the correct file extension, recipients may not be able to open your file.

```javascript
"personalisation":{
  "first_name": "Amala",
  "appointment_date": "1 January 2018 at 1:00PM",
  "link_to_file": {"file": "CSV file as base64 encoded string", "filename": "amala_pigeon_affairs_bureau_invite.csv"}
}
```

#### Ask recipients to confirm their email address before they can download the file

When a recipient clicks the link in the email you’ve sent them, they have to enter their email address. Only someone who knows the recipient’s email address can download the file.

This security feature is turned on by default.

##### Turn off email address check (not recommended)

If you do not want to use this feature, you can turn it off on a file-by-file basis.

You should not turn this feature off if you send files that contain:

* personally identifiable information
* commercially sensitive information
* information classified as ‘OFFICIAL’ or ‘OFFICIAL-SENSITIVE’ under the [Government Security Classifications](https://www.gov.uk/government/publications/government-security-classifications) policy

To let the recipient download the file without confirming their email address, set the `confirm_email_before_download` flag to `false`.


```javascript
"personalisation":{
  "first_name": "Amala",
  "appointment_date": "1 January 2018 at 1:00PM",
  "link_to_file": {"file": "file as base64 encoded string", "confirm_email_before_download": false}
}
```

#### Choose the length of time that a file is available to download

Set the number of weeks you want the file to be available using the `retention_period` key.

You can choose any value between 1 week and 78 weeks. When deciding this, you should consider:

* the need to protect the recipient’s personal information
* whether the recipient will need to download the file again later

If you do not choose a value, the file will be available for the default period of 26 weeks (6 months).

Files sent before 12 April 2023 had a longer default period of 78 weeks (18 months).

```javascript
"personalisation":{
  "first_name": "Amala",
  "appointment_date": "1 January 2018 at 1:00PM",
  "link_to_file": {"file": "file as base64 encoded string", "retention_period": "4 weeks"}
}
```

#### Response

If the request is successful, the response body is `json` with a status code of `201`:

```javascript
{
  "id": "201b576e-c09b-467b-9dfa-9c3b689ee730",  // required string - notification ID
  "reference": "your reference",  // optional string - reference you provided when sending the message
  "content": {
    "subject": "Your upcoming pigeon registration appointment",  // required string - message subject
    "body": "Dear Amala\r\n\r\nYour pigeon registration appointment is scheduled for 1 January 2018 at 1:00PM.\r\n\r\n Here is a link to your invitation document:\r\nhttps://documents.service.gov.uk/d/YlxDzgNUQYi1Qg6QxIpptA/th46VnrvRxyVO9div6f7hA?key=R0VDmwJ1YzNYFJysAIjQd9yHn5qKUFg-nXHVe3Ioa3A\r\n\r\nPlease bring the invite with you to the appointment.\r\n\r\nYours,\r\nPigeon Affairs Bureau",  // required string - message content - see that the link to document is embedded in the message content
    "from_email": "pigeon.affairs.bureau@notifications.service.gov.uk",  // required string - "FROM" email address, not a real inbox
    "one_click_unsubscribe_url": "https://example.com/unsubscribe.html?opaque=123456789",  // optional string
  },
  "uri": "https://api.notifications.service.gov.uk/v2/notifications/201b576e-c09b-467b-9dfa-9c3b689ee730",  // required string
  "template": {
    "id": "9d751e0e-f929-4891-82a1-a3e1c3c18ee3",  // required string - template ID
    "version": 1,  // required integer
    "uri": "https://api.notifications.service.gov.uk/v2/template/9d751e0e-f929-4891-82a1-a3e1c3c18ee3"  // required string
  }
}
```

#### Error codes

If the request is not successful, the API returns `json` containing the relevant error code.
To learn more about error structure, go to [Errors section](#errors).

|Error message|How to fix|
|:---|:---|
<%= partial 'documentation/error_tables/send_a_file_by_email' %>


### Send a letter

When you add a new service it will start in [trial mode](https://www.notifications.service.gov.uk/using-notify/trial-mode). You can only send letters when your service is live.

To send Notify a request to go live:

1. [Sign in to GOV.UK Notify](https://www.notifications.service.gov.uk/sign-in).
1. Go to the __Settings__ page.
1. In the __Your service is in trial mode__ section, select __request to go live__.

#### Method

```
POST /v2/notifications/letter
```

#### Request body

```javascript
{
  "template_id": "64415853-cb86-4cc4-b597-2aaa94ef8c39",
  "personalisation": {
    "address_line_1": "Amala Bird",
    "address_line_2": "123 High Street",
    "address_line_3": "SW14 6BH"
  }
}
```

#### Arguments

##### template_id (required)

To find the template ID:

1. [Sign in to GOV.UK Notify](https://www.notifications.service.gov.uk/sign-in).
1. Go to the __Templates__ page and select the relevant template.
1. Select __Copy template ID to clipboard__.


For example:

```javascript
"template_id": "9d751e0e-f929-4891-82a1-a3e1c3c18ee3", // required UUID string
```

##### personalisation (required)

The personalisation argument always contains the following parameters for the letter recipient’s address:

- `address_line_1`
- `address_line_2`
- `address_line_3`
- `address_line_4`
- `address_line_5`
- `address_line_6`
- `address_line_7`

The address must have at least 3 lines.

The last line needs to be a real UK postcode or the name of a country outside the UK.

Notify checks for international addresses and will automatically charge you the correct postage.

The `postcode` personalisation argument has been replaced. If your template still uses `postcode`, Notify will treat it as the last line of the address.

Any other placeholder fields included in the letter template also count as required parameters. You need to provide their values in a dictionary with key value pairs. For example:

```javascript
"personalisation": {
  "address_line_1": "Amala Bird",  // required string
  "address_line_2": "123 High Street",  // required string
  "address_line_3": "Richmond upon Thames",  // required string
  "address_line_4": "Middlesex",
  "address_line_5": "SW14 6BF",  // last line of address you include must be a postcode or a country name  outside the UK
  "name": "Amala",
  "appointment_date": "1 January 2018 at 1:00PM",
  // pass in a list and it will appear as bullet points in the letter:
  "required_documents": ["passport", "utility bill", "other id"]
}
```

##### reference (optional)

An identifier you can create if necessary. This reference identifies a single unique letter or a batch of letters. It must not contain any personal information such as name or postal address. For example:

```javascript
"reference": "your reference" // optional string - identifies notification(s)
```

#### Response

If the request is successful, the response body is `json` and the status code is `201`:

```javascript
{
  "id": "3d1ce039-5476-414c-99b2-fac1e6add62c",  // required string - notification ID
  "reference": "your reference",  // optional string - reference you provided when sending the message
  "content": {
    "subject": "Your upcoming pigeon registration appointment",  // required string - letter heading
    "body": "Dear Amala\r\n\r\nYour pigeon registration appointment is scheduled for 1 January 2018 at 1:00PM.\r\n\r\nPlease bring:\r\n\n\n* passport\n* utility bill\n* other id\r\n\r\nYours,\r\nPigeon Affairs Bureau",  // required string - letter content
  },
  "uri": "https://api.notifications.service.gov.uk/v2/notifications/3d1ce039-5476-414c-99b2-fac1e6add62c",  // required string
  "template": {
    "id": "64415853-cb86-4cc4-b597-2aaa94ef8c39",  // required string - template ID
    "version": 3,  // required integer
    "uri": "https://api.notifications.service.gov.uk/v2/template/64415853-cb86-4cc4-b597-2aaa94ef8c39"  // required string
  },
  "scheduled_for": null
}
```

#### Error codes

If the request is not successful, the API returns `json` containing the relevant error code. To learn more about error structure, go to [Errors section](#errors).

|Error message|How to fix|
|:---|:---|
<%= partial 'documentation/error_tables/send_a_letter' %>

### Send a precompiled letter

```
POST /v2/notifications/letter
```
#### Request body

```javascript
{
  "reference": "your reference",
  "content": "file as base64 encoded string"
}
```

#### Arguments

##### reference (required)

An identifier you create. This reference identifies a single unique precompiled letter or a batch of precompiled letters. It must not contain any personal information such as name or postal address.

```javascript
"reference": "your reference" // required string - identifies notification(s)
```

##### content (required)

The precompiled letter must be a PDF file which meets [the GOV.UK Notify letter specification](https://www.notifications.service.gov.uk/using-notify/guidance/letter-specification). You’ll need to convert the file into a string that is base64 encoded.

```javascript
"content": "file as base64 encoded string"
```

##### postage (optional)

You can choose first or second class postage for your precompiled letter. Set the value to `first` for first class, or `second` for second class. If you do not pass in this argument, the postage will default to second class.

```javascript
"postage": "second"
```


#### Response

If the request is successful, the response body is `json` and the status code is `201`:

```javascript
{
  "id": "1d986ba7-fba6-49fb-84e5-75038a1dd968",  // required string - notification ID
  "reference": "your reference",  // required string - reference your provided
  "postage": "first"  // required string - postage you provided, or else default postage for the letter
}
```

#### Error codes

If the request is not successful, the API returns `json` containing the relevant error code. To learn more about error structure, go to [Errors section](#errors).

|Error message|How to fix|
|:---|:---|
<%= partial 'documentation/error_tables/send_a_precompiled_letter' %>


<%= partial 'documentation/testing' %>
<%= partial 'documentation/api_keys' %>
<%= partial 'documentation/limits' %>
<%= partial 'documentation/callbacks' %>
<%= partial 'documentation/architecture' %>
